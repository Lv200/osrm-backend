// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: way.proto

#ifndef PROTOBUF_INCLUDED_way_2eproto
#define PROTOBUF_INCLUDED_way_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_way_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_way_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_way_2eproto();
namespace pbway {
class WayInfos;
class WayInfosDefaultTypeInternal;
extern WayInfosDefaultTypeInternal _WayInfos_default_instance_;
}  // namespace pbway
namespace google {
namespace protobuf {
template<> ::pbway::WayInfos* Arena::CreateMaybeMessage<::pbway::WayInfos>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace pbway {

// ===================================================================

class WayInfos :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbway.WayInfos) */ {
 public:
  WayInfos();
  virtual ~WayInfos();

  WayInfos(const WayInfos& from);

  inline WayInfos& operator=(const WayInfos& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WayInfos(WayInfos&& from) noexcept
    : WayInfos() {
    *this = ::std::move(from);
  }

  inline WayInfos& operator=(WayInfos&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WayInfos& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WayInfos* internal_default_instance() {
    return reinterpret_cast<const WayInfos*>(
               &_WayInfos_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(WayInfos* other);
  friend void swap(WayInfos& a, WayInfos& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WayInfos* New() const final {
    return CreateMaybeMessage<WayInfos>(nullptr);
  }

  WayInfos* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WayInfos>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WayInfos& from);
  void MergeFrom(const WayInfos& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WayInfos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 way_id = 1;
  int way_id_size() const;
  void clear_way_id();
  static const int kWayIdFieldNumber = 1;
  ::google::protobuf::int64 way_id(int index) const;
  void set_way_id(int index, ::google::protobuf::int64 value);
  void add_way_id(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      way_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_way_id();

  // repeated uint32 node_index = 2;
  int node_index_size() const;
  void clear_node_index();
  static const int kNodeIndexFieldNumber = 2;
  ::google::protobuf::uint32 node_index(int index) const;
  void set_node_index(int index, ::google::protobuf::uint32 value);
  void add_node_index(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      node_index() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_node_index();

  // repeated uint32 node_len = 3;
  int node_len_size() const;
  void clear_node_len();
  static const int kNodeLenFieldNumber = 3;
  ::google::protobuf::uint32 node_len(int index) const;
  void set_node_len(int index, ::google::protobuf::uint32 value);
  void add_node_len(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      node_len() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_node_len();

  // repeated int64 nodes = 4;
  int nodes_size() const;
  void clear_nodes();
  static const int kNodesFieldNumber = 4;
  ::google::protobuf::int64 nodes(int index) const;
  void set_nodes(int index, ::google::protobuf::int64 value);
  void add_nodes(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      nodes() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_nodes();

  // @@protoc_insertion_point(class_scope:pbway.WayInfos)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > way_id_;
  mutable std::atomic<int> _way_id_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > node_index_;
  mutable std::atomic<int> _node_index_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > node_len_;
  mutable std::atomic<int> _node_len_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > nodes_;
  mutable std::atomic<int> _nodes_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_way_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// WayInfos

// repeated int64 way_id = 1;
inline int WayInfos::way_id_size() const {
  return way_id_.size();
}
inline void WayInfos::clear_way_id() {
  way_id_.Clear();
}
inline ::google::protobuf::int64 WayInfos::way_id(int index) const {
  // @@protoc_insertion_point(field_get:pbway.WayInfos.way_id)
  return way_id_.Get(index);
}
inline void WayInfos::set_way_id(int index, ::google::protobuf::int64 value) {
  way_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbway.WayInfos.way_id)
}
inline void WayInfos::add_way_id(::google::protobuf::int64 value) {
  way_id_.Add(value);
  // @@protoc_insertion_point(field_add:pbway.WayInfos.way_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
WayInfos::way_id() const {
  // @@protoc_insertion_point(field_list:pbway.WayInfos.way_id)
  return way_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
WayInfos::mutable_way_id() {
  // @@protoc_insertion_point(field_mutable_list:pbway.WayInfos.way_id)
  return &way_id_;
}

// repeated uint32 node_index = 2;
inline int WayInfos::node_index_size() const {
  return node_index_.size();
}
inline void WayInfos::clear_node_index() {
  node_index_.Clear();
}
inline ::google::protobuf::uint32 WayInfos::node_index(int index) const {
  // @@protoc_insertion_point(field_get:pbway.WayInfos.node_index)
  return node_index_.Get(index);
}
inline void WayInfos::set_node_index(int index, ::google::protobuf::uint32 value) {
  node_index_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbway.WayInfos.node_index)
}
inline void WayInfos::add_node_index(::google::protobuf::uint32 value) {
  node_index_.Add(value);
  // @@protoc_insertion_point(field_add:pbway.WayInfos.node_index)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WayInfos::node_index() const {
  // @@protoc_insertion_point(field_list:pbway.WayInfos.node_index)
  return node_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WayInfos::mutable_node_index() {
  // @@protoc_insertion_point(field_mutable_list:pbway.WayInfos.node_index)
  return &node_index_;
}

// repeated uint32 node_len = 3;
inline int WayInfos::node_len_size() const {
  return node_len_.size();
}
inline void WayInfos::clear_node_len() {
  node_len_.Clear();
}
inline ::google::protobuf::uint32 WayInfos::node_len(int index) const {
  // @@protoc_insertion_point(field_get:pbway.WayInfos.node_len)
  return node_len_.Get(index);
}
inline void WayInfos::set_node_len(int index, ::google::protobuf::uint32 value) {
  node_len_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbway.WayInfos.node_len)
}
inline void WayInfos::add_node_len(::google::protobuf::uint32 value) {
  node_len_.Add(value);
  // @@protoc_insertion_point(field_add:pbway.WayInfos.node_len)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WayInfos::node_len() const {
  // @@protoc_insertion_point(field_list:pbway.WayInfos.node_len)
  return node_len_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WayInfos::mutable_node_len() {
  // @@protoc_insertion_point(field_mutable_list:pbway.WayInfos.node_len)
  return &node_len_;
}

// repeated int64 nodes = 4;
inline int WayInfos::nodes_size() const {
  return nodes_.size();
}
inline void WayInfos::clear_nodes() {
  nodes_.Clear();
}
inline ::google::protobuf::int64 WayInfos::nodes(int index) const {
  // @@protoc_insertion_point(field_get:pbway.WayInfos.nodes)
  return nodes_.Get(index);
}
inline void WayInfos::set_nodes(int index, ::google::protobuf::int64 value) {
  nodes_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbway.WayInfos.nodes)
}
inline void WayInfos::add_nodes(::google::protobuf::int64 value) {
  nodes_.Add(value);
  // @@protoc_insertion_point(field_add:pbway.WayInfos.nodes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
WayInfos::nodes() const {
  // @@protoc_insertion_point(field_list:pbway.WayInfos.nodes)
  return nodes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
WayInfos::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:pbway.WayInfos.nodes)
  return &nodes_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace pbway

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_way_2eproto
